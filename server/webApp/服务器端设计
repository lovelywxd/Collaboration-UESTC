# 代码冗余过多，返回错误信息不清晰简洁
· 登录注册端：希望可以用电话，用户名，邮箱任一个进行登录验证，注册信息存在必填选项与必填选项（默认为空，或者其他）
· 中间件：期望使用更高效的方法完成登录验证，例如Djano自带的登录认证系统：认证后端。（自定义或扩展的方法）



完成项目内容：希望能够以标准的形式（Json API）

大概流程是客户端的动作，服务器的响应对照。

遵循标准：RESTful API 格式。以github的API设计为例：https://api.github.com/
响应地址（URL）：
响应内容：
响应格式：
{"数据字段名称":"数据内容"}
例如
错误信息(APIValueError)：
{"error":"value:Invalid",
"data":"email",
"message":"Email is already in use."}


后端提供的信息：（可能对服务器提取的操作，）

· 注册用户
	· 用户基本信息、用户可能关注书籍类别
· 用户登录
	· 确保用户不重复登录，返回用户本地cookie信息(永久存在信息)
· 用户个人信息{email,name}列表
	· 用户拼单车（订单）
		· 获取拼单列表
		· 添加拼单表（添加书籍）
		· 删除拼单表某本书籍
	· 用户个人收藏书籍列表
	 	· ~同上用户拼单表，问题：收藏(关注)和拼单表是否雷同？
		· 用户添加收藏（没懂：收藏中的两种信息）
			· 收藏类别：选择类别（类别列表）
			· 收藏书籍列表
		· 删除收藏类别

	· 用户其它信息（返回用户哪些信息）
		· 联系方式，诚信度等等
		· 是否对他人可见等

· （当前优惠活动推送）优惠活动列表
	· 如何保证同步？客户端与服务器的活动列表同步
	· 优先推送用户关注的书籍是什么意思？
· 优惠活动{act_id}的详情信息
  · 随机活动书籍推送(可以与用户之前的关注有关)

能否将信息返回给用户？用户个人绑定？多用户？用户操作与响应对应。短连接。
· 用户主页书籍搜索(活动act_all，书名book_name)
	· 返回书籍比价信息列表（各大电商网站）
· 用户相应活动页面搜索（活动act_id,书名book_name）
	· 返回书籍详细信息(相应活动）或者书籍比价信息表
	· 若有货，返回书籍详细信息表(相应活动）
	· 若无货，返回书籍比价信息表

· 添加书籍至拼单车
  · 服务器拼单车记录增加(绑定个人信息)
	· 查看拼单表(根据不同的活动进行拼单，拼单要求，喜好)
· 用户参与拼单（开团和拼团的区别）  关于拼单区
 	· 拼单提交
	· 拼单状态
		· 拼单中（服务器计算最优拼单）
		· 拼单成功（服务器通知成员及团长，团长确认下单）
	· 交易状态
		· 团长确认收货，服务器通知拼单成员收货(email，或者用户消息)



后端的API设计：
要么借助于Django的用户登录注册模块实现（Django用户登录模块的扩展）
要么使用自己的方法实现.
(中间有个middleware模块，用户首先经过middleware，或者用户每次请求处理，首先检查用户登录情况：cookie)
问题是用户打开APP后，期望发送的任何请求，用户登录一次过后，都能识别为改用户的请求。
cookie&&session的区别。
Django的session是对cookie的抽象，即返回给用户的仍然是cookie，只是cookie只是一个ID，重要的信息都在服务器这边了。
session 属性，这是一个字典型的对象

· 用户注册 POST /user/register
· 用户登录 POST /user/authenticate
· 获取优惠活动列表 GET /acts
· 优惠活动详情 GET /acts/{act_id}
· 用户主页书籍搜索 GET /acts/{book_name}  或用查询字符串(?acts_all&&book_name)
· 用户相应活动下书籍搜索 GET /{acts_id}/{book_name} 或用查询字符串(?acts_id&&book_name)
· 用户添加收藏 POST /favourite/add
· 用户获取收藏 GET /favourite
· 用户删除收藏 POST /favoutite/delete
我觉得收藏类别和收藏书籍直接放在一起，或先不管收藏类别，这里先只说收藏书籍。
		· 最好的方式是用户选择收藏类别，然后在类别下添加书籍（或根据书籍服务器自动记录类别）
		· 或将收藏类别放在用户个人信息表中（也是关注类别）
		· 用户获取收藏书籍列表 GET /favourite/booklists





后端需要的设计的数据库models：
· 用户个人信息
· 用户收藏
	· 用户id，收藏类别（可以选择多种）
	· 用户id，收藏书籍（多本收藏书籍：书名)
· 用户拼单列表(所有订单)
	· 用户id, 订单信息
· 优惠活动列表
  · promotionID(区分GB,PB不同类别活动), promotionName, promotionLink，（或增加活动类别）
· 某活动详情列表（书籍列表（优先发送用户关注：类别、书籍））
	· 该活动下的20本书籍信息.
		· promotionID，promotionBooks
· 书籍比价信息表

· 书籍信息表




拼单车：下单，书名，书的信息，数量  add, delete, get, compute
确认下单，拼单成功，拼单失败，团长等等拼单业务，计算
